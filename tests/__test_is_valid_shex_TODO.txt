import os
import pytest
from typing import cast

from ShExJSG import ShExC, ShExJ
from ShExJSG.SchemaWithContext import Schema
from ShExJSG.ShExJ import Shape, EachOf, TripleConstraint
from pyjsg.jsglib import loader
from pyjsg.jsglib.loader import is_valid, StringIO
from pyshex.utils.schema_loader import SchemaLoader
from rdflib import DCTERMS

from tests import EXAMPLE_PROFILES_DIRECTORY


@pytest.mark.skip
@pytest.mark.xfail(raises=TypeError)
def test_is_valid_shex_error():
    """Determine whether a bit of ShEx is valid with only one expression."""
    # If this only has one expression, it errors out while being built
    # There IS a way to turn checking off, but will have to find it
    schema = Schema(
        shapes=[
            Shape(
                id="default",
                expression=EachOf(
                    expressions=[
                        TripleConstraint(predicate=DCTERMS.title),
                        TripleConstraint(predicate=DCTERMS.subject),
                    ]
                ),
            )
        ]
    )

    # This should turn this into an invalid entry.
    # Not certain why it still isn't caught in the log
    schema.shapes[0].expression.expressions.pop()
    log = StringIO()
    rval = is_valid(schema, log)
    print(log.getvalue())
    assert not rval
